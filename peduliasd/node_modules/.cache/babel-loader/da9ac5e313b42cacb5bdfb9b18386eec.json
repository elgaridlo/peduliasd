{"ast":null,"code":"import axios from \"axios\";\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_PROFILE_FAIL, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS } from \"../constants/authConstants\";\nexport const login = (email, password) => async dispatch => {\n  try {\n    dispatch({\n      type: USER_LOGIN_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.post('/api/users/login', {\n      email,\n      password\n    }, config);\n    console.log('data = ', data);\n    dispatch({\n      type: USER_LOGIN_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_LOGIN_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const getProfile = id => async dispatch => {\n  try {\n    dispatch({\n      type: USER_PROFILE_REQUEST\n    });\n    const config = {\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    };\n    const {\n      data\n    } = await axios.get(`/api/users/${id}`, config);\n    console.log('data = ', data);\n    dispatch({\n      type: USER_PROFILE_SUCCESS,\n      payload: data\n    });\n    localStorage.setItem('userDetail', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_PROFILE_FAIL,\n      payload: error.response && error.response.data.message ? error.response.data.message : error.message\n    });\n  }\n};\nexport const logout = () => dispatch => {\n  // disini ada batas dispatchnya atau enggak emang gw yg gak paham\n  localStorage.removeItem('userInfo');\n  dispatch({\n    type: USER_LOGOUT\n  });\n};","map":{"version":3,"sources":["/Users/elgaridlo/Documents/project di otak/peduliASD/peduliasd/src/actions/authActions.js"],"names":["axios","USER_LOGIN_FAIL","USER_LOGIN_REQUEST","USER_LOGIN_SUCCESS","USER_LOGOUT","USER_PROFILE_FAIL","USER_PROFILE_REQUEST","USER_PROFILE_SUCCESS","login","email","password","dispatch","type","config","headers","data","post","console","log","payload","localStorage","setItem","JSON","stringify","error","response","message","getProfile","id","get","logout","removeItem"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,eAAT,EAA0BC,kBAA1B,EAA8CC,kBAA9C,EAAkEC,WAAlE,EAA+EC,iBAA/E,EAAkGC,oBAAlG,EAAwHC,oBAAxH,QAAoJ,4BAApJ;AAEA,OAAO,MAAMC,KAAK,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AAC1D,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEV;AADD,KAAD,CAAR;AAIA,UAAMW,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAACgB,IAAN,CAAW,kBAAX,EAA+B;AAAEP,MAAAA,KAAF;AAASC,MAAAA;AAAT,KAA/B,EAAoDG,MAApD,CAAvB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAET,kBADD;AAELgB,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAKAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,UAArB,EAAiCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAjC;AACH,GArBD,CAqBE,OAAOS,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEX,eADD;AAELkB,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE;AALP,KAAD,CAAR;AAOH;AACJ,CA/BM;AAiCP,OAAO,MAAMC,UAAU,GAAIC,EAAD,IAAQ,MAAOjB,QAAP,IAAoB;AAClD,MAAI;AACAA,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEN;AADD,KAAD,CAAR;AAIA,UAAMO,MAAM,GAAG;AACXC,MAAAA,OAAO,EAAE;AACL,wBAAgB;AADX;AADE,KAAf;AAMA,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMf,KAAK,CAAC6B,GAAN,CAAW,cAAaD,EAAG,EAA3B,EAA8Bf,MAA9B,CAAvB;AAEAI,IAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ,EAAuBH,IAAvB;AAEAJ,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEL,oBADD;AAELY,MAAAA,OAAO,EAAEJ;AAFJ,KAAD,CAAR;AAKAK,IAAAA,YAAY,CAACC,OAAb,CAAqB,YAArB,EAAmCC,IAAI,CAACC,SAAL,CAAeR,IAAf,CAAnC;AACH,GArBD,CAqBE,OAAOS,KAAP,EAAc;AACZb,IAAAA,QAAQ,CAAC;AACLC,MAAAA,IAAI,EAAEP,iBADD;AAELc,MAAAA,OAAO,EACLK,KAAK,CAACC,QAAN,IAAkBD,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OAAtC,GACIF,KAAK,CAACC,QAAN,CAAeV,IAAf,CAAoBW,OADxB,GAEIF,KAAK,CAACE;AALP,KAAD,CAAR;AAOH;AACJ,CA/BM;AAiCP,OAAO,MAAMI,MAAM,GAAG,MAAOnB,QAAD,IAAc;AACtC;AACAS,EAAAA,YAAY,CAACW,UAAb,CAAwB,UAAxB;AACApB,EAAAA,QAAQ,CAAC;AACLC,IAAAA,IAAI,EAAER;AADD,GAAD,CAAR;AAGH,CANM","sourcesContent":["import axios from \"axios\"\nimport { USER_LOGIN_FAIL, USER_LOGIN_REQUEST, USER_LOGIN_SUCCESS, USER_LOGOUT, USER_PROFILE_FAIL, USER_PROFILE_REQUEST, USER_PROFILE_SUCCESS } from \"../constants/authConstants\"\n\nexport const login = (email, password) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_LOGIN_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.post('/api/users/login', { email, password }, config)\n\n        console.log('data = ', data)\n\n        dispatch({\n            type: USER_LOGIN_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userInfo', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_LOGIN_FAIL,\n            payload:\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          })\n    }\n}\n\nexport const getProfile = (id) => async (dispatch) => {\n    try {\n        dispatch({\n            type: USER_PROFILE_REQUEST\n        })\n\n        const config = {\n            headers: {\n                'Content-Type': 'application/json'\n            }\n        }\n\n        const { data } = await axios.get(`/api/users/${id}`, config)\n\n        console.log('data = ', data)\n\n        dispatch({\n            type: USER_PROFILE_SUCCESS,\n            payload: data\n        })\n\n        localStorage.setItem('userDetail', JSON.stringify(data))\n    } catch (error) {\n        dispatch({\n            type: USER_PROFILE_FAIL,\n            payload:\n              error.response && error.response.data.message\n                ? error.response.data.message\n                : error.message,\n          })\n    }\n}\n\nexport const logout = () => (dispatch) => {\n    // disini ada batas dispatchnya atau enggak emang gw yg gak paham\n    localStorage.removeItem('userInfo')\n    dispatch({\n        type: USER_LOGOUT\n    })\n}"]},"metadata":{},"sourceType":"module"}